// <auto-generated />
using System;
using CarShop.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarShop.Migrations
{
    [DbContext(typeof(CarShopDataContext))]
    [Migration("20240619171714_att-v2")]
    partial class attv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarShop.Models.CustomerDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("doc_number");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("doc_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.Property<string>("PerfilPhoto")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phonenumber");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("CarShop.Models.FinancialTransactionsDB", b =>
                {
                    b.Property<int>("FinancialTransactionDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("financial_transation_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FinancialTransactionDBId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<string>("FinancialTransactionType")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("type_transation");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("value");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_id");

                    b.HasKey("FinancialTransactionDBId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("financial_transactions");
                });

            modelBuilder.Entity("CarShop.Models.VehicleDB", b =>
                {
                    b.Property<int>("VehicleDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VehicleDBId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("brand");

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("change_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("license_plate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("model");

                    b.Property<DateTime?>("ModelYear")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("model_year");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registration_date");

                    b.Property<string>("Renavan")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasColumnName("renavan");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("situation");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vehicle_type");

                    b.Property<DateTime?>("YearManufacture")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("year_manufacture");

                    b.HasKey("VehicleDBId");

                    b.ToTable("vehicles");
                });

            modelBuilder.Entity("CarShop.Models.VehicleImageDB", b =>
                {
                    b.Property<int>("VehicleImageDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VehicleImageDBId"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("url");

                    b.Property<int>("VehicleDBId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_id");

                    b.HasKey("VehicleImageDBId");

                    b.HasIndex("VehicleDBId");

                    b.ToTable("vehicle_image");
                });

            modelBuilder.Entity("CarShop.Models.FinancialTransactionsDB", b =>
                {
                    b.HasOne("CarShop.Models.CustomerDB", "Customer")
                        .WithMany("FinancialTransactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShop.Models.VehicleDB", "Vehicle")
                        .WithMany("FinancialTransactions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarShop.Models.VehicleImageDB", b =>
                {
                    b.HasOne("CarShop.Models.VehicleDB", "Vehicle")
                        .WithMany("VehicleImages")
                        .HasForeignKey("VehicleDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarShop.Models.CustomerDB", b =>
                {
                    b.Navigation("FinancialTransactions");
                });

            modelBuilder.Entity("CarShop.Models.VehicleDB", b =>
                {
                    b.Navigation("FinancialTransactions");

                    b.Navigation("VehicleImages");
                });
#pragma warning restore 612, 618
        }
    }
}
