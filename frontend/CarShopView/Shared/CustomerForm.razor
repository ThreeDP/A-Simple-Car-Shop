@using CarShopView.Models;
@inject ICustomer customer

<EditForm Model="@customer" OnValidSubmit="@(() => OnSubmit.Invoke(customer))">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <CustomInput TValue="string" InputName="Nome" Id='@(FormName + "-name")' @bind-Value="customer.Name"/>
    <ValidationMessage For="@(() => customer.Name)" />

    <CustomInput TValue="string" InputName="Imagem de Perfil" Id='@(FormName + "-url")' @bind-value="customer.UrlImage" />
    <ValidationMessage For="@(() => customer.UrlImage)" />

    <CustomSelectInput TValue="string" InputName="Tipo de Documento" Id='@(FormName + "-document-type")' @bind-Value="customer.DocType" Options="@optionsDocumentType"/>
    <ValidationMessage For="@(() => customer.DocType)" />

    <CustomInput TValue="string" InputName="NÃºmero do documento" Id='@(FormName + "-document-number")' @bind-value="customer.DocNumber" />
    <ValidationMessage For="@(() => customer.DocNumber)" />

    <CustomInput TValue="string" InputName="Celular" Id='@(FormName + "-cellphone")' @bind-value="customer.CellPhone" />
    <ValidationMessage For="@(() => customer.CellPhone)" />

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Enviar</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public ICustomer Customer { get { return customer; } set { customer = value; } }

    [Parameter]
    public Func<ICustomer, Task> OnSubmit { get; set; }

    [Parameter]
    public string FormName { get; set; }

    List<string> optionsDocumentType = new List<string> {"CPF", "CNPJ"};
}